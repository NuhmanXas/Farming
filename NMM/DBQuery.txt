-- Create the database
CREATE DATABASE CRAS_DB;
USE CRAS_DB;

-- Create Farmers table
CREATE TABLE Farmers (
    farmer_id INT AUTO_INCREMENT PRIMARY KEY,
    farm_name VARCHAR(100) NOT NULL,
    address VARCHAR(255),
    contact_number VARCHAR(15),
    email VARCHAR(100),
    farm_size DECIMAL(10, 2),
    farming_experience INT, -- Number of years of farming experience
    profile_image_url VARCHAR(255) -- URL/path to the farmer's profile image
);

-- Create Crops table
CREATE TABLE Crops (
    crop_id INT AUTO_INCREMENT PRIMARY KEY,
    crop_name VARCHAR(100) NOT NULL,
    scientific_name VARCHAR(100), -- Scientific name of the crop
    suitable_season VARCHAR(50), -- Suitable season for growing the crop
    seed_requirement DECIMAL(10, 2), -- Seed requirement per unit area (e.g., per acre)
    crop_image_url VARCHAR(255) -- URL/path to the crop image
);

-- Create Varieties table (Crop Varieties)
CREATE TABLE Varieties (
    variety_id INT AUTO_INCREMENT PRIMARY KEY,
    crop_id INT,
    variety_name VARCHAR(100) NOT NULL,
    spacing VARCHAR(50), -- Spacing required for this variety
    variety_image_url VARCHAR(255), -- URL/path to the variety image
    FOREIGN KEY (crop_id) REFERENCES Crops(crop_id)
);

-- Create Fertilization table
CREATE TABLE Fertilization (
    fertilization_id INT AUTO_INCREMENT PRIMARY KEY,
    variety_id INT,
    fertilization_method VARCHAR(255) NOT NULL,
    fertilization_description TEXT,
    time_of_application VARCHAR(50), -- Time of application for fertilization
    fertilization_image_url VARCHAR(255), -- URL/path to the fertilization image
    FOREIGN KEY (variety_id) REFERENCES Varieties(variety_id)
);

-- Create Tasks table
CREATE TABLE Tasks (
    task_id INT AUTO_INCREMENT PRIMARY KEY,
    farmer_id INT,
    variety_id INT,
    task_date DATE NOT NULL,
    task_description TEXT NOT NULL,
    task_image_url VARCHAR(255), -- URL/path to the task image
    FOREIGN KEY (farmer_id) REFERENCES Farmers(farmer_id),
    FOREIGN KEY (variety_id) REFERENCES Varieties(variety_id)
);

-- Create Advisory table
CREATE TABLE Advisory (
    advisory_id INT AUTO_INCREMENT PRIMARY KEY,
    variety_id INT,
    best_practices TEXT NOT NULL,
    estimated_costs DECIMAL(10, 2),
    advisory_image_url VARCHAR(255), -- URL/path to the advisory image
    FOREIGN KEY (variety_id) REFERENCES Varieties(variety_id)
);

-- Create Admins table
CREATE TABLE Admins (
    admin_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    profile_image_url VARCHAR(255) -- URL/path to the admin profile image
);
